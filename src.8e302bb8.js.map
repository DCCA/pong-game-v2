{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/WinMessage.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","GAME_WIDTH","GAME_HEIGHT","BOARD_COLOR","WIN_SCORE","ELEM_COLOR","PADDLE_GAP","PADDLE_WIDTH","PADDLE_HEIGHT","PADDLE_MIN_HEIGHT","PADDLE_SPEED","PADDLE_REDUCE","BALL_COLOR","BALL_RADIUS","BALL_SPEED","BALL_BOUNCE_SPEED","KEYS","p1Up","p1Down","p2Up","p2Down","paused","Board","width","height","background","matchPoint","svg","rect","document","createElementNS","setAttributeNS","appendChild","line","text","textContent","Paddle","boardHeight","x","y","keyUp","keyDown","speed","score","addEventListener","event","key","moveUp","moveDown","position","top","left","bottom","right","value","Math","max","min","Ball","radius","boardWidth","direction","sign","random","reset","pingSound","Audio","Ping","loserSound","Loser","paddleCollisionCounter","vy","floor","vx","abs","paddleP1","paddleP2","increaseScore","setHeight","play","p1","getPaddlePosition","hitRight","belowTop","aboveBottom","p2","hitLeft","ball","ballMove","wallCollision","paddleCollision","Score","size","scoreDisplay","WinMessage","message","winMsg","Game","element","gameWon","gameElement","getElementById","board","winMessage","setSpeed","p1Score","p2Score","console","log","setAttribute","innerHTML","isMatchPoint","getScore","render","winningPlayer","gameWin","resetScore","game","p1down","pause","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.8e302bb8.js","sourceRoot":"..","sourcesContent":["/*\n *Settings\n */\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\n/* \nGame Configuration \n*/\nexport const GAME_WIDTH = 512;\nexport const GAME_HEIGHT = 256;\nexport const BOARD_COLOR = '#262169';\nexport const WIN_SCORE = 8;\n/*\n *Paddle and Net Color\n */\nexport const ELEM_COLOR = '#d6db93';\n/*\n *Paddles\n */\nexport const PADDLE_GAP = 10;\nexport const PADDLE_WIDTH = 8;\nexport const PADDLE_HEIGHT = 56;\nexport const PADDLE_MIN_HEIGHT = 14;\nexport const PADDLE_SPEED = 20;\nexport const PADDLE_REDUCE = 2;\n/*\n *Ball\n */\nexport const BALL_COLOR = '#d6db93';\nexport const BALL_RADIUS = 8;\nexport const BALL_SPEED = 0.25;\n// Do not increase beyond 0 to .10\nexport const BALL_BOUNCE_SPEED = 1;\n/*\n *Controls\n */\nexport const KEYS = {\n\tp1Up: 'w',\n\tp1Down: 's',\n\tp2Up: 'o',\n\tp2Down: 'l',\n\tpaused: ' '\n};\n","import { SVG_NS, BOARD_COLOR, ELEM_COLOR } from '../settings';\n\nexport default class Board {\n\tconstructor(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.background = BOARD_COLOR;\n\t\tthis.matchPoint = false;\n\t}\n\n\trender(svg, matchPoint) {\n\t\t// Create the rectangle element\n\t\tconst rect = document.createElementNS(SVG_NS, 'rect');\n\t\trect.setAttributeNS(null, 'x', 0);\n\t\trect.setAttributeNS(null, 'y', 0);\n\t\trect.setAttributeNS(null, 'rx', 10);\n\t\trect.setAttributeNS(null, 'ry', 10);\n\t\trect.setAttributeNS(null, 'width', this.width);\n\t\trect.setAttributeNS(null, 'height', this.height);\n\t\trect.setAttributeNS(null, 'fill', this.background);\n\t\trect.setAttributeNS(null, 'stroke', ELEM_COLOR);\n\t\trect.setAttributeNS(null, 'stroke-width', 4);\n\t\t// Append the rectangle\n\t\tsvg.appendChild(rect);\n\n\t\t// Create the line element\n\t\tconst line = document.createElementNS(SVG_NS, 'line');\n\t\tline.setAttributeNS(null, 'x1', this.width / 2);\n\t\tline.setAttributeNS(null, 'y1', 0);\n\t\tline.setAttributeNS(null, 'x2', this.width / 2);\n\t\tline.setAttributeNS(null, 'y2', this.height);\n\t\tline.setAttributeNS(null, 'stroke', ELEM_COLOR);\n\t\tline.setAttributeNS(null, 'stroke-width', 4);\n\t\tline.setAttributeNS(null, 'stroke-dasharray', '10 4');\n\t\t// Append the line\n\t\tsvg.appendChild(line);\n\t\t// If match point, create text\n\t\tif (!!matchPoint) {\n\t\t\tthis.background = 'red';\n\t\t\trect.setAttributeNS(null, 'fill', this.background);\n\n\t\t\tconst text = document.createElementNS(SVG_NS, 'text');\n\t\t\ttext.setAttributeNS(null, 'x', this.width / 2);\n\t\t\ttext.setAttributeNS(null, 'y', this.height - 40);\n\t\t\ttext.setAttributeNS(null, 'font-size', 40);\n\t\t\ttext.setAttributeNS(null, 'text-anchor', 'middle');\n\t\t\ttext.setAttributeNS(null, 'fill', ELEM_COLOR);\n\t\t\ttext.textContent = 'MATCH POINT';\n\t\t\tsvg.appendChild(text);\n\t\t} else {\n\t\t\tthis.background = BOARD_COLOR;\n\t\t\trect.setAttributeNS(null, 'fill', this.background);\n\t\t}\n\t}\n}\n","import {\n\tSVG_NS,\n\tELEM_COLOR,\n\tPADDLE_SPEED,\n\tPADDLE_GAP,\n\tPADDLE_REDUCE,\n\tPADDLE_MIN_HEIGHT\n} from '../settings';\n\nexport default class Paddle {\n\tconstructor(boardHeight, width, height, x, y, keyUp, keyDown) {\n\t\tthis.boardHeight = boardHeight;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.speed = PADDLE_SPEED;\n\t\tthis.score = 0;\n\t\t// Add event listeners for keypress\n\t\tdocument.addEventListener('keydown', event => {\n\t\t\tswitch (event.key) {\n\t\t\t\tcase keyUp:\n\t\t\t\t\tthis.moveUp();\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyDown:\n\t\t\t\t\tthis.moveDown();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t}\n\t\t});\n\t}\n\t// Methods\n\tgetPaddlePosition() {\n\t\tconst position = {\n\t\t\ttop: this.y,\n\t\t\tleft: this.x - PADDLE_GAP,\n\t\t\tbottom: this.y + this.height,\n\t\t\tright: this.x + this.width + PADDLE_GAP\n\t\t};\n\t\treturn position;\n\t}\n\t// Set speed value\n\tsetSpeed(value) {\n\t\tthis.speed = value;\n\t}\n\t// Set the movement for the paddles\n\tmoveUp() {\n\t\t// Limit the paddle to the top limit of the board\n\t\tthis.y = Math.max(0, (this.y -= this.speed));\n\t}\n\tmoveDown() {\n\t\t// Limit the paddle to the bottom limit of the board\n\t\tthis.y = Math.min(this.boardHeight - this.height, (this.y += this.speed));\n\t}\n\t// Get score of the paddles\n\tgetScore() {\n\t\treturn this.score;\n\t}\n\n\tresetScore() {\n\t\tthis.score = 0;\n\t}\n\n\tincreaseScore() {\n\t\tthis.score += 1;\n\t}\n\t// Set paddle height\n\tsetHeight() {\n\t\tthis.height = Math.max(\n\t\t\tthis.height - PADDLE_REDUCE * this.score,\n\t\t\tPADDLE_MIN_HEIGHT\n\t\t);\n\t\treturn this.height;\n\t}\n\n\trender(svg) {\n\t\t// Create the rectangle element\n\t\tconst rect = document.createElementNS(SVG_NS, 'rect');\n\t\trect.setAttributeNS(null, 'x', this.x);\n\t\trect.setAttributeNS(null, 'y', this.y);\n\t\trect.setAttributeNS(null, 'width', this.width);\n\t\trect.setAttributeNS(null, 'height', this.height);\n\t\trect.setAttributeNS(null, 'fill', ELEM_COLOR);\n\t\t// Append the rectangle\n\t\tsvg.appendChild(rect);\n\t\t//\n\t}\n}\n","import { SVG_NS, BALL_COLOR, BALL_SPEED, BALL_BOUNCE_SPEED } from '../settings';\nimport Ping from '../../public/sounds/laser_gun.wav';\nimport Loser from '../../public/sounds/loser.wav';\n\n// Ball.js\nexport default class Ball {\n\tconstructor(radius, boardWidth, boardHeight) {\n\t\tthis.radius = radius;\n\t\tthis.boardWidth = boardWidth;\n\t\tthis.boardHeight = boardHeight;\n\t\tthis.direction = Math.sign(Math.random() - 0.5);\n\t\tthis.reset();\n\t\tthis.pingSound = new Audio(Ping);\n\t\tthis.loserSound = new Audio(Loser);\n\t\tthis.paddleCollisionCounter = 0;\n\t}\n\n\treset() {\n\t\tthis.x = this.boardWidth / 2;\n\t\tthis.y = this.boardHeight / 2;\n\t\t// Set the velocity for the ball\n\t\t// Velocity has to be bigger than 0\n\t\tthis.vy = 0;\n\t\twhile (this.vy === 0) {\n\t\t\tthis.vy = Math.floor(Math.random() * 10 - 5);\n\t\t}\n\t\tthis.vx = this.direction * (6 - Math.abs(this.vy));\n\t\tthis.paddleCollisionCounter = 0;\n\t}\n\n\twallCollision(paddleP1, paddleP2) {\n\t\t// Check the collision on top and bottom\n\t\tif (this.y - this.radius <= 0 || this.y + this.radius >= this.boardHeight) {\n\t\t\tthis.vy = this.vy * -BALL_BOUNCE_SPEED;\n\t\t}\n\t\t// Check collision on right and left side\n\t\tif (this.x - this.radius >= this.boardWidth) {\n\t\t\tpaddleP1.increaseScore();\n\t\t\tpaddleP1.setHeight();\n\t\t\tthis.direction = -1;\n\t\t\tthis.loserSound.play();\n\t\t\tthis.reset();\n\t\t} else if (this.x + this.radius <= 0) {\n\t\t\tpaddleP2.increaseScore();\n\t\t\tpaddleP2.setHeight();\n\t\t\tthis.direction = 1;\n\t\t\tthis.loserSound.play();\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\tpaddleCollision(paddleP1, paddleP2) {\n\t\tif (this.vx < 0) {\n\t\t\tconst p1 = paddleP1.getPaddlePosition();\n\t\t\tconst hitRight = this.x + this.radius <= p1.right;\n\t\t\tconst belowTop = this.y + this.radius / 2 >= p1.top;\n\t\t\tconst aboveBottom = this.y - this.radius / 2 <= p1.bottom;\n\t\t\tif (hitRight && belowTop && aboveBottom) {\n\t\t\t\tthis.pingSound.play();\n\t\t\t\tthis.vx = (this.vx - BALL_SPEED * this.paddleCollisionCounter) * -1;\n\t\t\t\tthis.paddleCollisionCounter++;\n\t\t\t}\n\t\t} else {\n\t\t\tconst p2 = paddleP2.getPaddlePosition();\n\t\t\tconst hitLeft = this.x - this.radius >= p2.left;\n\t\t\tconst belowTop = this.y + this.radius / 2 >= p2.top;\n\t\t\tconst aboveBottom = this.y - this.radius / 2 <= p2.bottom;\n\t\t\tif (hitLeft && belowTop && aboveBottom) {\n\t\t\t\tthis.pingSound.play();\n\t\t\t\tthis.vx = (this.vx + BALL_SPEED * this.paddleCollisionCounter) * -1;\n\t\t\t\tthis.paddleCollisionCounter++;\n\t\t\t}\n\t\t}\n\t}\n\n\tballMove() {\n\t\tthis.x += this.vx;\n\t\tthis.y += this.vy;\n\t}\n\n\trender(svg, paddleP1, paddleP2) {\n\t\t// Create the ball SVG\n\t\tconst ball = document.createElementNS(SVG_NS, 'circle');\n\t\tball.setAttributeNS(null, 'cx', this.x);\n\t\tball.setAttributeNS(null, 'cy', this.y);\n\t\tball.setAttributeNS(null, 'r', this.radius);\n\t\tball.setAttributeNS(null, 'fill', BALL_COLOR);\n\t\tsvg.appendChild(ball);\n\t\t// Make ball move\n\t\tthis.ballMove();\n\t\t// Check wall collisions\n\t\tthis.wallCollision(paddleP1, paddleP2);\n\t\t// Check paddle collision\n\t\tthis.paddleCollision(paddleP1, paddleP2);\n\t}\n}\n","import { SVG_NS, ELEM_COLOR } from '../settings';\n\nexport default class Score {\n\tconstructor(x, y, size) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.size = size;\n\t}\n\t//...\n\trender(svg, score) {\n\t\tconst scoreDisplay = document.createElementNS(SVG_NS, 'text');\n\t\tscoreDisplay.setAttributeNS(null, 'x', this.x);\n\t\tscoreDisplay.setAttributeNS(null, 'y', this.y);\n\t\tscoreDisplay.setAttributeNS(null, 'font-size', this.size);\n\t\tscoreDisplay.setAttributeNS(null, 'text-anchor', 'middle');\n\t\tscoreDisplay.setAttributeNS(null, 'fill', ELEM_COLOR);\n\t\tscoreDisplay.textContent = score;\n\t\tsvg.appendChild(scoreDisplay);\n\t}\n}\n","import { SVG_NS, ELEM_COLOR } from '../settings';\n\nexport default class WinMessage {\n\tconstructor(x, y, size) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.size = size;\n\t}\n\t//...\n\trender(svg, message) {\n\t\tconst winMsg = document.createElementNS(SVG_NS, 'text');\n\t\twinMsg.setAttributeNS(null, 'x', this.x);\n\t\twinMsg.setAttributeNS(null, 'y', this.y);\n\t\twinMsg.setAttributeNS(null, 'font-size', this.size);\n\t\twinMsg.setAttributeNS(null, 'text-anchor', 'middle');\n\t\twinMsg.setAttributeNS(null, 'fill', ELEM_COLOR);\n\t\twinMsg.textContent = message;\n\t\tsvg.appendChild(winMsg);\n\t}\n}\n","import {\n\tSVG_NS,\n\tPADDLE_GAP,\n\tPADDLE_WIDTH,\n\tPADDLE_HEIGHT,\n\tBALL_RADIUS,\n\tPADDLE_SPEED,\n\tWIN_SCORE,\n\tKEYS\n} from '../settings';\nimport Board from './Board';\nimport Paddle from './Paddle';\nimport Ball from './Ball';\nimport Score from './Score';\nimport WinMessage from './WinMessage';\n\nexport default class Game {\n\tconstructor(element, width, height) {\n\t\tthis.element = element;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.paused = true;\n\t\tthis.gameWon = false;\n\t\tthis.matchPoint = false;\n\t\t// Get the ID from HTML to render the game\n\t\tthis.gameElement = document.getElementById(this.element);\n\t\t// Create the board\n\t\tthis.board = new Board(this.width, this.height);\n\t\t// Create paddles (boardHeight, width, height, x, y)\n\t\tthis.paddleP1 = new Paddle(\n\t\t\tthis.height,\n\t\t\tPADDLE_WIDTH,\n\t\t\tPADDLE_HEIGHT,\n\t\t\tPADDLE_GAP,\n\t\t\t(this.height - PADDLE_HEIGHT) / 2,\n\t\t\tKEYS.p1Up,\n\t\t\tKEYS.p1Down\n\t\t);\n\t\tthis.paddleP2 = new Paddle(\n\t\t\tthis.height,\n\t\t\tPADDLE_WIDTH,\n\t\t\tPADDLE_HEIGHT,\n\t\t\tthis.width - (PADDLE_WIDTH + PADDLE_GAP),\n\t\t\t(this.height - PADDLE_HEIGHT) / 2,\n\t\t\tKEYS.p2Up,\n\t\t\tKEYS.p2Down\n\t\t);\n\t\t// Create Ball\n\t\tthis.ball = new Ball(BALL_RADIUS, this.width, this.height);\n\t\t// Create score constructor(x, y, size)\n\t\tthis.score = new Score(this.width / 2, 30, 20);\n\t\t// Create win message\n\t\tthis.winMessage = new WinMessage(this.width / 2, this.height / 2, 40);\n\t\t// Add event listener for pause\n\t\tdocument.addEventListener('keydown', event => {\n\t\t\tif (event.key === KEYS.paused) {\n\t\t\t\tthis.paused = !this.paused;\n\t\t\t\tif (this.paused === true) {\n\t\t\t\t\tthis.paddleP1.setSpeed(0);\n\t\t\t\t\tthis.paddleP2.setSpeed(0);\n\t\t\t\t} else {\n\t\t\t\t\tthis.paddleP1.setSpeed(PADDLE_SPEED);\n\t\t\t\t\tthis.paddleP2.setSpeed(PADDLE_SPEED);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t// Check game win\n\tgameWin(p1Score, p2Score) {\n\t\tif (p1Score === WIN_SCORE) {\n\t\t\tconsole.log('p1 won');\n\t\t\tthis.gameWon = true;\n\t\t\treturn 'P1 won';\n\t\t} else if (p2Score === WIN_SCORE) {\n\t\t\tconsole.log('p2 won');\n\t\t\tthis.gameWon = true;\n\t\t\treturn 'P2 won';\n\t\t}\n\t}\n\t// Check match point\n\tisMatchPoint(p1Score, p2Score) {\n\t\tif (p1Score === WIN_SCORE - 1 || p2Score === WIN_SCORE - 1) {\n\t\t\tthis.matchPoint = true;\n\t\t} else {\n\t\t\tthis.matchPoint = false;\n\t\t}\n\t}\n\n\trender() {\n\t\t// Check if game is paused\n\t\tif (this.paused === false) {\n\t\t\tconst messageToStart = document.getElementById('start-msg');\n\t\t\tmessageToStart.setAttribute('class', 'hide');\n\t\t\t// Create the game SVG element\n\t\t\tthis.gameElement.innerHTML = '';\n\t\t\tconst svg = document.createElementNS(SVG_NS, 'svg');\n\t\t\tsvg.setAttributeNS(null, 'width', this.width);\n\t\t\tsvg.setAttributeNS(null, 'height', this.height);\n\t\t\tsvg.setAttributeNS(null, 'viewBox', `0 0 ${this.width} ${this.height}`);\n\t\t\tthis.gameElement.appendChild(svg);\n\t\t\t// Check if is match point\n\t\t\tthis.isMatchPoint(this.paddleP1.getScore(), this.paddleP2.getScore());\n\t\t\t// Render Board\n\t\t\tthis.board.render(svg, this.matchPoint);\n\t\t\t// Render the paddle for the P1\n\t\t\tthis.paddleP1.render(svg);\n\t\t\t// Render the paddle for the P2\n\t\t\tthis.paddleP2.render(svg);\n\t\t\t// Render Ball\n\t\t\tthis.ball.render(svg, this.paddleP1, this.paddleP2);\n\t\t\t// Render Score\n\t\t\tthis.score.render(\n\t\t\t\tsvg,\n\t\t\t\t`${this.paddleP1.getScore()} vs. ${this.paddleP2.getScore()}`\n\t\t\t);\n\n\t\t\t// Check if game is won\n\t\t\tconst winningPlayer = this.gameWin(\n\t\t\t\tthis.paddleP1.getScore(),\n\t\t\t\tthis.paddleP2.getScore()\n\t\t\t);\n\t\t\tif (this.gameWon === true) {\n\t\t\t\tthis.winMessage.render(svg, `${winningPlayer}!`);\n\t\t\t\tthis.paused = true;\n\t\t\t\tthis.paddleP1.resetScore();\n\t\t\t\tthis.paddleP2.resetScore();\n\t\t\t\tthis.gameWon = false;\n\t\t\t}\n\t\t}\n\t}\n}\n","import './styles/game.css';\nimport Game from './partials/Game';\nimport { GAME_HEIGHT, GAME_WIDTH, KEYS } from './settings';\n\n// create a game instance\nconst game = new Game('game', GAME_WIDTH, GAME_HEIGHT);\nconst p1Up = document.getElementById('p1-up');\nconst p1down = document.getElementById('p1-down');\nconst p2Up = document.getElementById('p2-up');\nconst p2Down = document.getElementById('p2-down');\nconst pause = document.getElementById('pause');\np1Up.textContent = KEYS.p1Up;\np2Up.textContent = KEYS.p2Up;\np1down.textContent = KEYS.p1Down;\np2Down.textContent = KEYS.p2Down;\npause.textContent = 'space bar';\n\n(function gameLoop() {\n\tgame.render();\n\trequestAnimationFrame(gameLoop);\n})();\n"]}